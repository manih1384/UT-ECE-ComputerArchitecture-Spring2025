    lw   x8, 500(x0)           # x8 = data[0]
    add  x9, x0, x0            # x9 = 0 (index pointer)
    add  x15, x0, x0           # x15 = 0 (max offset)
Loop:
    addi x9, x9, 4             # x9 += 4
    slti x6, x9, 80            # x6 = (x9 < 80)
    beq  x6, x0, EndLoop       # branch if done
    lw   x18, 500(x9)          # x18 = data[index]
    slt  x6, x8, x18           # x6 = (max < current)
    beq  x6, x0, Loop          # if not, skip update
    add  x8, x18, x0           # max = x18
    add  x15, x9, x0           # max_index = x9 (offset, bytes)
    jal  x0, Loop              # always jump to Loop
EndLoop:
    # Divide x15 by 4 to get the real index; use x9 as counter, x6 as temp
    add  x9, x0, x0            # x9 = 0 (will count "max index" / 4)
DivideLoop:
    slti x6, x15, 4            # if x15 < 4, done
    beq  x6, x0, ContinueDiv   # if not done, continue
    jal  x0, DivEnd            # done dividing: exit to DivEnd
ContinueDiv:
    addi x15, x15, -4          # x15 = x15 - 4
    addi x9, x9, 1             # x9++
    jal  x0, DivideLoop        # repeat
DivEnd:
    add  x15, x9, x0           # x15 = x9 (now the true index!)
    sw   x8, 2000(x0)          # store max value
    sw   x15, 2004(x0)         # store index
    jal  x0, End               # halt/infinite loop
End:
    jal  x0, End               # halt/infinite loop